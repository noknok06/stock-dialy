"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from dotenv import load_dotenv

# .envファイルの読み込み
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')
CSRF_TRUSTED_ORIGINS = [
    'https://kabu-log.net', 'http://kabu-log.net', 
    'http://localhost:8000', 
]

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',  # 必須
    'widget_tweaks',
    'ckeditor',
    'ckeditor_uploader',  # 追加
    'tinymce',
    'users',  # ← これがあるか確認
    'tags',
    'analysis_template',
    'company_master',
    'checklist',
    'stockdiary',
    'portfolio', 
    'subscriptions',
    'ads',
    # django-allauth関連
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',  # Googleプロバイダー
    'maintenance',
]


# メディアファイルの設定
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# CKEditor の設定
CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_BROWSE_SHOW_DIRS = True
CKEDITOR_IMAGE_BACKEND = 'pillow'

# CKEditor設定
CKEDITOR_CONFIGS = {
    'default': {
        'width': '100%',
        'height': 300,
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline', 'Strike', 'RemoveFormat'],
            ['NumberedList', 'BulletedList', 'Blockquote'],
            ['Link', 'Unlink', 'Image', 'Table'],
            ['Styles', 'Format', 'FontSize'],
            ['TextColor', 'BGColor'],
            ['Undo', 'Redo'], ['Source', 'Maximize'],
        ],
        'extraPlugins': 'autogrow',
        'autoGrow_minHeight': 300,
        'autoGrow_maxHeight': 600,
        'autoGrow_onStartup': True,
        # コンテンツの幅を制限
        'removePlugins': 'resize',
        'allowedContent': True,
        # レスポンシブ画像
        'image2_responsive': True,
    },
    'basic': {
        'width': '100%',
        'height': 200,
        'toolbar': 'Basic',
        'toolbar_Basic': [
            ['Bold', 'Italic', 'Underline', 'Strike'],
            ['NumberedList', 'BulletedList', 'Blockquote'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source'],
        ],
        'removePlugins': 'resize',
        'allowedContent': True,
    },
}

TINYMCE_DEFAULT_CONFIG = {
    'theme': 'silver',
    'width': '100%',
    'height': 300,
    'menubar': False,
    'plugins': 'link image lists table code',
    'toolbar': 'bold italic | bullist numlist | link image table | code',
    'mobile': {
        'plugins': 'link image lists table',
        'toolbar': 'bold italic | bullist numlist | link image'
    },
}

MIDDLEWARE = [
    'maintenance.middleware.MaintenanceModeMiddleware',  # これを追加   
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # 追加
    'subscriptions.middleware.SubscriptionMiddleware',
    'ads.middleware.AdsMiddleware',  # 広告表示制御
]

AUTHENTICATION_BACKENDS = [
    # デフォルトのDjango認証バックエンド
    'django.contrib.auth.backends.ModelBackend',
    
    # allauth固有の認証バックエンド
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Sitesフレームワークの設定
SITE_ID = 1
# allauth設定
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'  # ソーシャルアカウントのメール検証は不要
SOCIALACCOUNT_AUTO_SIGNUP = True  # 自動サインアップを有効に
ACCOUNT_UNIQUE_EMAIL = True  # メールアドレスの一意性を保証

# Google認証設定
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'VERIFIED_EMAIL': True,  # Googleからのメールアドレスを検証済みとして扱う
    }
}
# ソーシャルアカウント設定
SOCIALACCOUNT_LOGIN_ON_GET = True  # GETリクエストで直接ログイン
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'none'  # メール確認なし
SOCIALACCOUNT_ADAPTER = 'users.adapters.CustomSocialAccountAdapter'

ROOT_URLCONF = 'config.urls'

SOCIALACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSocialSignupForm',
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'company_master', 'templates'),
            os.path.join(BASE_DIR, 'templates')
            ], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'subscriptions.context_processors.subscription_status',
                'ads.context_processors.ads_processor',
                # サブスクリプションコンテキストプロセッサ
                'subscriptions.context_processors.subscription_status',
                # 広告コンテキストプロセッサを追加
                'ads.context_processors.ads_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'kabulog'),
        'USER': os.getenv('DB_USER', 'naoki'),
        'PASSWORD': os.getenv('DB_PASSWORD', ''),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.CustomUser'
LOGIN_URL = 'users:login'
LOGIN_REDIRECT_URL = 'stockdiary:home'
LOGOUT_REDIRECT_URL = 'users:login'

# 本番環境の設定例
# https://myaccount.google.com/apppasswords
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # 使用するメールサーバー
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'kabulog.information@gmail.com'  # 送信元メールアドレス
EMAIL_HOST_PASSWORD = 'wfsdxbdxsdusvddw'  # アプリパスワードまたは通常のパスワード
# DEFAULT_FROM_EMAIL = 'Kabulog <kabulog.information@gmail.com>'

# ===== Stripe設定（現在は機能を使用していないためコメントアウト） =====
# STRIPE_PUBLIC_KEY = 'pk_test_あなたのStripeパブリックキー'
# STRIPE_SECRET_KEY = 'sk_test_あなたのStripeシークレットキー'
# STRIPE_WEBHOOK_SECRET = 'whsec_あなたのWebhookシークレット'
# セッション設定
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'  # または 'Strict'

# CSRF設定
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Lax'  # または 'Strict'

ACCOUNT_LOGOUT_REDIRECT_URL = 'users:login'

SECURE_SSL_REDIRECT = True
SECURE_HSTS_SECONDS = 31536000  # 1年
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django-error.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
SOCIALACCOUNT_REDIRECT_URLS = {
    'google': 'https://kabu-log.net/accounts/google/login/callback/'
}


ADS_SETTINGS = {
    'DEFAULT_AD_CLIENT': 'ca-pub-3954701883136363',  # デフォルトの広告クライアントID
    'SHOW_ADS_DEFAULT': True,  # デフォルトで広告表示を有効にするか
    'PREMIUM_USERS_NO_ADS': True,  # プレミアムユーザーに広告を表示しないか
}

MAINTENANCE_MODE = True

#  許可するIPアドレスのリスト（管理者のIPなど）
MAINTENANCE_ALLOWED_IPS = [
    '193.186.4.181',       # ローカル開発環境
    '192.168.1.100',   # 例: 管理者のIP
    # 実際の管理者IPに置き換えてください
]

# メンテナンスモードでもアクセス可能なURLパターン（正規表現）
MAINTENANCE_EXEMPT_URLS = [
    r'^/static/.*',    # 静的ファイル
    r'^/media/.*',     # メディアファイル
    r'^/$',            # ランディングページ（ルートURL）
]

# メンテナンス終了予定時刻（表示用）
MAINTENANCE_END_TIME = '2025年3月23日 10:00 (JST)'

# 問い合わせ用メールアドレス
MAINTENANCE_CONTACT_EMAIL = 'support@kablog.example.com'

MIDDLEWARE.append('csp.middleware.CSPMiddleware')

CSP_FRAME_ANCESTORS = ["'self'", "*.google.com", "*.doubleclick.net"]
CSP_SCRIPT_SRC = ["'self'", "*.googleadservices.com", "*.google.com", 
                  "*.googlesyndication.com", "*.doubleclick.net", "'unsafe-inline'"]
